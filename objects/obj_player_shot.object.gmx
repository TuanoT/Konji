<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_knife_shot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize Variables

range = 0;
damage = 1;
poison_damage = 0;
bounce = 0;
special = 'None';
special_time = 0;
image_index = irandom(image_number);
crit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change the depth depending on the y axis

depth = -y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy if out of range

if (point_distance(x, y, xstart, ystart) &gt;= range) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Particles

var part = scr_find_projectile_part(sprite_index);

// Create Particles
if part != -1 {
    if irandom(5) == 0 {
        
        xx = x + lengthdir_x(8, -direction);
        yy = y + lengthdir_y(8, -direction);
    
        var inst = instance_create(xx+random_range(-4, 4), yy+random_range(-4, 4), obj_shot_particle);
        inst.depth = depth;
        inst.direction = direction;
        inst.speed = -4;
        inst.sprite_index = part;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enlarge if Crit

if crit == true {
    image_xscale = 1.5;
    image_yscale = 1.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage Enemy

if other.invulnerable == false {

    other.hp -= floor(damage * other.cursed_multiplier);
    
    // Poison
    if poison_damage != 0 {
        other.poison_amount = 6;
        other.poison_damage = poison_damage;
    }
    
    // Create Damage Text
    var inst = instance_create(other.x + other.shot_start_x, other.y - (other.sprite_height / 2) + other.shot_start_y, obj_damage_text);
    inst.text = floor(damage * other.cursed_multiplier);
    if crit == true {
        inst.crit = true;
    }
    
    // Debuff
    switch special {
        case 'Paralyse':
            other.paralyse_alarm = special_time;
            other.paralyse = 0;
            break;
            
        case 'Curse':
            other.cursed_alarm = special_time;
            other.cursed_multiplier = 2;
            break;
            
        case 'Jinx':
            other.cursed_alarm = special_time;
            other.cursed_multiplier = 1.5;
            break;
            
        case 'Stupefy':
            other.paralyse_alarm = special_time;
            other.stunned_alarm = special_time;
            other.stunned = true;
            other.paralyse = 0;
            break;
            
        case 'Stun':
            other.stunned_alarm = special_time;
            other.stunned = true;
            break;
    }
}

// Create Particles
repeat irandom_range(2, 4) {
    var inst = instance_create(other.x + other.shot_start_x, other.y + other.shot_start_y, obj_particle);
    inst.sprite_index = other.particle_sprite;
}

// Destroy / Bounce
if bounce &gt; 0 {
    bounce--;
    move_bounce_all(false);
    image_angle = direction;
} else {
    instance_destroy();
}

// Play Impact Sound
var snd = audio_play_sound(snd_impact_flesh, 1, false);
audio_sound_pitch(snd, random_range(0.95, 1.05));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy / Bounce

if bounce &gt; 0 {
    bounce--;
    move_bounce_solid(false);
    image_angle = direction;
} else {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
