<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_declan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize Variables

damage = 10;
shot_speed = 10;
fire_rate = 30;
range = 100;
fire_sound = snd_shoot_1;
shot_sprite = spr_crystal_scout_shot;
shot_number = 2;
shot_angle_start = -3;
shot_angle_increment = 6;
image_speed = .1;
shot_start_y = 0;
special = 'None';
special_amount = 0;
hp_amount = 0;
mp_amount = 0;
can_shoot = true;

alarm[0] = 30;
alarm[1] = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mheal a little later

if (obj_player.mp != obj_player.max_mp) {
    var inst = instance_create(x, y+shot_start_y, obj_mana_pillar_shot);
    inst.mp_amount = mp_amount;
    var snd = audio_play_sound(snd_mheal, 1, false);
    audio_sound_pitch(snd, 1.25);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Heal/MHeal

if hp_amount != 0 {
    if (obj_player.hp != obj_player.max_hp) {
        var inst = instance_create(x, y+shot_start_y, obj_health_pillar_shot);
        inst.hp_amount = hp_amount;
        audio_play_sound(snd_mheal, 1, false);
    }
}

if mp_amount != 0 {
    alarm[2] = 30;
}

alarm[1] = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot

// Find Target
var tar = -1;
if instance_exists(obj_enemy_parent) &amp;&amp; !instance_nearest(x, y, obj_enemy_parent).invisible {
    tar = instance_nearest(x, y, obj_enemy_parent);
}

// Shoot
if (tar != -1 &amp;&amp; point_distance(x, y, tar.x + tar.shot_start_x, tar.y + tar.shot_start_y) &lt; range &amp;&amp; can_shoot == true) {

    var num = 0;
    repeat shot_number {
        var inst = instance_create(x, y + shot_start_y, obj_player_shot);
        
        with inst {
            direction = point_direction(x, y, tar.x + tar.shot_start_x, tar.y + tar.shot_start_y) + other.shot_angle_start + num;
            image_angle = direction;
            speed = other.shot_speed;
            range = other.range;
            damage = other.damage;
            sprite_index = other.shot_sprite;
            special = other.special;
            special_time = other.special_amount;   
            
            // Crit
            if other.special == 'Crit Chance' {
                if random_range(0, 100) &lt;= other.special_amount {
                    crit = true;
                    damage *= 3;
                }
            }
            
            // Poison
            if other.special == 'Poison' {
                poison_damage = other.special_amount;
            } else {
                poison_damage = 0;
            }
        }
        num += shot_angle_increment;
    }
    
    // Play Fire Sound
    var snd = audio_play_sound(fire_sound, 1, false);
    audio_sound_pitch(snd, random_range(0.95, 1.05));
}

alarm[0] = 30 / fire_rate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change the depth depending on the y axis

depth = -y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow the Player

if instance_exists(obj_player) {
    if point_distance(x, y, obj_player.x, obj_player.y) &gt; 32 {
        x += (obj_player.x - x) * .04;
        y += ((obj_player.y - 8) - y) * .04;
        image_speed = .1;
    } else {
        image_speed = 0;
    }

    // Face Direction Enemy is moving
    dir = point_direction(x, y, obj_player.x, obj_player.y);
    if (dir &gt; 90 &amp;&amp; dir &lt; 270) {
        image_xscale = -1;
    } else {
        image_xscale = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Shadows

scr_draw_shadow();
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
