<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize Varibles

xp = 1;
name = 'Nit';
hp = 25;
max_hp = hp;
damage = 5;
range = 128;
shot_speed = 8;
shoot_time_min = 30;
shoot_time_max = 60;
state = scr_enemy_erratic;
spd = 1.5;
path_spd = 0;
shot_sprite = spr_nit_shot;
shoot_sound = snd_shoot_1;
particle_sprite = spr_blood_particle;
can_shoot = true;
shot_start_x = 0;
shot_start_y = 0;
shot_start_y_real = 0;
deactivate_out_of_range = false;
image_spd = .1;
shot_number = 1;
shot_angle_start = 0;
shot_angle_increment = 0;
player_poison_damage = 0;
shoot_at_player = true;
player_slow_time = 0;
player_dazed_time = 0;
player_cursed_time = 0;
player_sick_time = 0;
bounce = 0;
ignore_defence = false;
shot_image_spd = 1;
invisible = false

// Loot Variables
crate_image = 0;
loot_tier_min = 1;
loot_tier_max = 1;
loot_amount = 1;
loot_chance = 1;
portal = -1;
portal_chance = irandom(8);
loot_tier_god = 1;
loot_god_chance = 1;
special_loot_id = 0;
special_loot_chance = 1;
special_crate_image = 4;
medal = -1;
t13_chance = 1;
cosmic_item_chance = 1;

// Not Important
alarm[0] = 30; // Shoot
alarm[1] = 15; // Poison
alarm[2] = 30; // Check if in range
alarm[3] = 1; // Paralyse
poison_damage = 1;
poison_amount = 0;
paralyse = 1;
stunned = false;
cursed_multiplier = 1;
invulnerable = false;
direction = point_direction(x, y, obj_player.x, obj_player.y);
image_red = 255;
state = 'still';
parent = -1;

cursed_alarm = -1;
paralyse_alarm = -1;
stunned_alarm = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reserved
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reserved
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reserved
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reserved
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy if to far away

if instance_exists(obj_player) {
    if !point_in_rectangle(x, y, view_xview[0] - 480, view_yview[0] - 480, view_xview[0] + 1120, view_yview[0] + 960) {
        if deactivate_out_of_range == true {
            instance_deactivate_object(self);
        } else {
            instance_destroy();
        }
    }
} else {
    instance_destroy();
}

alarm[2] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Poison Enemy

if (poison_amount &gt;= 1) {
    hp -= poison_damage;
    
    var inst = instance_create(x + shot_start_x, y - (other.sprite_height / 2) + shot_start_y, obj_damage_text);
    inst.text = poison_damage;
    inst.colour = c_purple;
    
    poison_amount--;
}

alarm[1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot

if (can_shoot == true &amp;&amp; point_distance(x + shot_start_x, y + shot_start_y, obj_player.x, obj_player.y) &lt; range * 1.5 &amp;&amp; stunned == false) {
    
    var num = 0;

    repeat shot_number {
        var inst = instance_create(x + shot_start_x, y + shot_start_y + shot_start_y_real, obj_enemy_shot_parent);
        
        with inst {
        
            // Shoot at Player
            var player_dir = 0;
            if other.shoot_at_player == true {
                player_dir = point_direction(x, y, obj_player.x, (obj_player.y)-16);
            }
        
            direction = player_dir + other.shot_angle_start + num
            image_angle = direction;
            speed = other.shot_speed
            range = other.range
            damage = other.damage;
            sprite_index = other.shot_sprite;
            poison_damage = other.player_poison_damage;
            slow_time = other.player_slow_time;
            dazed_time = other.player_dazed_time;
            cursed_time = other.player_cursed_time;
            sick_time = other.player_sick_time;
            parent = other.id;
            bounce = other.bounce;
            ignore_defence = other.ignore_defence;
            image_speed = other.shot_image_spd;
        }
        num += shot_angle_increment;
    }
    
    // Play Fire Sound
    if shoot_sound != -1 {
        var snd = audio_play_sound(shoot_sound, 1, false);
        audio_sound_pitch(snd, random_range(0.95, 1.05));
    }
}

alarm[0] = irandom_range(shoot_time_min, shoot_time_max);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change the depth depending on the y axis

depth = -y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Execute the state

script_execute(state);

// Stop animating
if paralyse == 0 {
    image_speed = 0;
} else {
    image_speed = image_spd;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Die if HP = 0

if (hp &lt;= 0) {
    scr_drop_loot();
    global.xp += xp;
    global.kills++;
    instance_destroy();
    
    // Drop portal
    if (portal != -1 &amp;&amp; portal_chance == 0) {
        instance_create(x, y-16, portal);
    }
    
    // Show XP Gain
    var inst = instance_create(x + shot_start_x, y - (sprite_height / 2) + shot_start_y, obj_xp_text_wait);
    inst.text = string(xp)+" xp";
    
    // Create Particles
    repeat irandom_range(6, 8) {
        var inst = instance_create(x + shot_start_x, y + shot_start_y, obj_particle);
        inst.sprite_index = particle_sprite;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Find Stats

speed = spd * paralyse;
path_speed = path_spd * paralyse;

// Change Colour
if image_red &lt; 255 {
    image_red += 5;
} else {
    image_red = 255;
}

image_blend = make_colour_rgb(255, image_red, image_red);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fake Alarms

// Stunned
if (stunned_alarm &gt; -1) {
    stunned_alarm--;
} else {
    stunned_alarm = -1;
}

if stunned_alarm == 0 {
    stunned = false;
}

// Paralyse
if (paralyse_alarm &gt; -1) {
    paralyse_alarm--;
} else {
    paralyse_alarm = -1;
}

if paralyse_alarm == 0 {
    paralyse = 1;
}

// Cursed
if (cursed_alarm &gt; -1) {
    cursed_alarm--;
} else {
    cursed_alarm = -1;
}

if cursed_alarm == 0 {
    cursed_multiplier = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Shadows if not invisible

if !invisible scr_draw_shadow();

draw_self();

// Exit exists lol
if invisible {
    exit;
}   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw HP

var xx = x - 16 + shot_start_x;
var yy = y + (sprite_height * .5) + 4 + shot_start_y;
var xxx = x  + 16 + shot_start_x;
var yyy = y + (sprite_height * .5) + 8 + shot_start_y;

// Find hp bar colour
if invulnerable == true {
    var max_col = c_aqua;
    var min_col = c_aqua;
} else {
    var max_col = c_lime;
    var min_col = c_red;
}

draw_healthbar(xx, yy, xxx, yyy, (hp / max_hp) * 100, c_black, min_col, max_col, 0, true, true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Debuff Icons

var yy = y - (sprite_height * .5) - 12 + shot_start_y;

// Poison
if (poison_amount != 0) {
    draw_sprite(spr_debuff_icon, 0, x + shot_start_x, yy);
    yy -= 16;
}

// Paralyse
if (paralyse = 0) {
    draw_sprite(spr_debuff_icon, 2, x + shot_start_x, yy);
    yy -= 16;
}

// Cursed
if (cursed_multiplier == 2) {
    draw_sprite(spr_debuff_icon, 3, x + shot_start_x, yy);
    yy -= 16;
}

// Jinxed
if (cursed_multiplier == 1.5) {
    draw_sprite(spr_debuff_icon, 7, x + shot_start_x, yy);
    yy -= 16;
}

// Cursed
if (stunned == true) {
    draw_sprite(spr_debuff_icon, 5, x + shot_start_x, yy);
    yy -= 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
