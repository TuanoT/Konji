<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_main</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

near = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if near

near = point_in_rectangle(obj_player.x, obj_player.y, 288, 256, 352, 320);

if keyboard_check_pressed(global.use_key) and near {
    if global.task_complete[global.current_task] {

        // Epic sounds
        audio_play_sound(snd_unlock, 1, false);
        audio_play_sound(snd_crate_drop, 1, false);
        
        // Create Crate
        var inst = instance_create(320, 304, obj_crate_1);
        inst.image_index = 4;
        var item = global.task_reward[global.current_task];
        inst.item[5] = item;
        
        // Update Task
        global.current_task++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Shit

// Taskmaster
var index = global.background_image_index div 5 mod 2;
if global.task_complete[global.current_task] {
    if near {
        index = 2;
        draw_sprite(spr_task_collect, 0, 320, 192);
    } else {
        draw_sprite(spr_portal_exclaim, 0, 320, 208);
    }
}  
draw_sprite(spr_task_master, index, 320, 192);

// Task, reward
draw_set_colour(c_white);
draw_set_halign(fa_middle);
if !obj_controller.show_ui {

    var ct = global.current_task;

    draw_set_font(fnt_item_name);
    draw_text(128, 64, "Task:");
    draw_text(512, 64, "Reward:");
    
    draw_set_font(fnt_stats_bold);
    draw_text(128, 96, global.task_line1[ct]);
    draw_text(128, 112, global.task_line2[ct]);
    draw_text(128, 128, global.task_line3[ct]);
    
    // Item
    var item = global.task_reward[ct];
    draw_text(512, 96, global.item_name[item]);
    draw_sprite(global.item_sprite[item], 0, 512, 128);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw in-world task ui

draw_set_colour(c_dkgray);

draw_rectangle(0, 0, 256, 256, false);
draw_rectangle(384, 0, 640, 256, false);

if !obj_controller.show_ui {

    // Background
    draw_sprite(spr_stat_background, 0, 32, 32);
    draw_sprite(spr_stat_background, 0, 416, 32);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
